{"version":3,"sources":["file.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","File","classes","UserGithub","props","state","username","githubtUrl","avatarUrl","login","id","location","follower","following","$","get","this","source","result","console","log","data","setState","name","html_url","avatar_url","className","src","href","React","Component","ReactDOM","render","document","getElementById","output","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","style","backgroundColor"],"mappings":"sQAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,cA6DCC,EAzDR,WACP,IAAMC,EAAUV,IACVW,EAFK,kDAGP,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,MAAO,GACPC,GAAI,GACJC,SAAU,GACVC,SAAU,GACVC,UAAW,IAVA,EAHZ,qDAgBP,WAAqB,IAAD,OAChBC,IAAEC,IAAIC,KAAKZ,MAAMa,QAAQ,SAACC,GACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACA,EAAKC,SAAS,CACVhB,SAAUe,EAAKE,KACfhB,WAAYc,EAAKG,SACjBhB,UAAWa,EAAKI,WAChBhB,MAAOY,EAAKZ,MACZC,GAAIW,EAAKX,GACTC,SAAUU,EAAKV,SACfC,SAAUS,EAAKT,SACfC,UAAWQ,EAAKR,iBA7BzB,oBAkCP,WACI,OACA,sBAAKa,UAAWxB,EAAQP,MAAxB,UACI,uCAAUqB,KAAKX,MAAMC,YACrB,wCAAWU,KAAKX,MAAMI,SACtB,qCAAQO,KAAKX,MAAMK,MACnB,2CAAcM,KAAKX,MAAMM,YACzB,2CAAcK,KAAKX,MAAMO,YACzB,4CAAeI,KAAKX,MAAMQ,aAC1B,qBAAKc,IAAKX,KAAKX,MAAMG,YACrB,mBAAGoB,KAAMZ,KAAKX,MAAME,WAApB,gCA5CD,GAEcsB,IAAMC,WA+C/BC,IAASC,OACT,cAAC7B,EAAD,CAAYc,OAAO,0CACnBgB,SAASC,eAAe,SAExB,IAAIC,EAAO,GAEX,OADAA,EAAOC,KAAK,cAACjC,EAAD,KACLgC,GCvDIE,MAVf,WACE,OACE,qBAAKX,UAAU,MAAf,SACI,8BACGzB,SCIIqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdR,IAASC,OACP,cAAC,IAAMe,WAAP,UACE,qBAAKC,MAAO,CAAEC,gBAAkB,WAAhC,SACE,cAAC,EAAD,QAGJhB,SAASC,eAAe,SAM1BI,M","file":"static/js/main.71b02983.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport $ from  'jquery'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    }\n}));\n\nconst File=()=>{\n    const classes = useStyles();\n    class UserGithub extends React.Component {     \n        constructor(props) {         \n            super(props);         \n            this.state = {           \n                username: '',           \n                githubtUrl: '',           \n                avatarUrl: '',\n                login: '',\n                id: '',\n                location: '',\n                follower: '',\n                following: '',         \n            }     \n        }     \n        componentDidMount() {         \n            $.get(this.props.source, (result) => {             \n                console.log(result);             \n                const data = result;             \n                if (data) {               \n                    this.setState({                     \n                        username: data.name,                     \n                        githubtUrl: data.html_url,                     \n                        avatarUrl: data.avatar_url ,\n                        login: data.login,\n                        id: data.id,\n                        location: data.location,\n                        follower: data.follower,\n                        following: data.following\n                    });             \n                }         \n            });     \n        }     \n        render() {         \n            return (           \n            <div className={classes.paper}>             \n                <h3>Name:{this.state.username}</h3>\n                <h4>Login:{this.state.login}</h4>\n                <h4>ID:{this.state.id}</h4>\n                <h4>Location:{this.state.location}</h4>\n                <h4>Follower:{this.state.follower}</h4>\n                <h4>Following:{this.state.following}</h4>             \n                <img src={this.state.avatarUrl} />\n                <a href={this.state.githubtUrl}>Github Link</a>    \n                </div>         \n                );     \n            } \n    } \n    ReactDOM.render(   \n    <UserGithub source=\"https://api.github.com/users/YooY0606\" />,   \n    document.getElementById('root') \n    );\n    var output=[];\n    output.push(<UserGithub/>)\n    return output\n}\n    export default File;","import './App.css';\nimport File from './file'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div>\n          {File()}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div style={{ backgroundColor:  '#FAF0E6'}}>\n      <App />  \n    </div>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}